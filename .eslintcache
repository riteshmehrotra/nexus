[{"/Users/riteshmehrotra/workspace/codemania/src/stories/Leaderboard.stories.js":"1","/Users/riteshmehrotra/workspace/codemania/src/Leaderboard.js":"2","/Users/riteshmehrotra/workspace/codemania/src/domain/projects/ProjectCard.stories.js":"3","/Users/riteshmehrotra/workspace/codemania/src/domain/projects/ProjectCard.js":"4","/Users/riteshmehrotra/workspace/codemania/src/domain/projects/ProjectsView.stories.js":"5","/Users/riteshmehrotra/workspace/codemania/src/domain/projects/ProjectsView.js":"6","/Users/riteshmehrotra/workspace/codemania/src/domain/forum/PostCard.stories.js":"7","/Users/riteshmehrotra/workspace/codemania/src/domain/forum/PostCard.js":"8","/Users/riteshmehrotra/workspace/codemania/src/domain/forum/ForumView.stories.js":"9","/Users/riteshmehrotra/workspace/codemania/src/domain/forum/ForumView.js":"10","/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/Home.stories.js":"11","/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/home.js":"12","/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/home.stories.js":"13","/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/Home.js":"14","/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/Header.js":"15","/Users/riteshmehrotra/workspace/codemania/src/domain/recordings/TechTalks.stories.js":"16","/Users/riteshmehrotra/workspace/codemania/src/domain/recordings/TechTalks.js":"17"},{"size":336,"mtime":1610810937255,"results":"18","hashOfConfig":"19"},{"size":365,"mtime":1610810822877,"results":"20","hashOfConfig":"19"},{"size":725,"mtime":1610813073826,"results":"21","hashOfConfig":"19"},{"size":2711,"mtime":1610892743230,"results":"22","hashOfConfig":"19"},{"size":263,"mtime":1610813606326,"results":"23","hashOfConfig":"19"},{"size":470,"mtime":1610814712539,"results":"24","hashOfConfig":"19"},{"size":239,"mtime":1610893222591,"results":"25","hashOfConfig":"19"},{"size":3771,"mtime":1610896655534,"results":"26","hashOfConfig":"19"},{"size":245,"mtime":1610894794815,"results":"27","hashOfConfig":"19"},{"size":1608,"mtime":1610896377213,"results":"28","hashOfConfig":"19"},{"size":203,"mtime":1610932729738,"results":"29","hashOfConfig":"19"},{"size":169,"mtime":1610933214083,"results":"30","hashOfConfig":"19"},{"size":203,"mtime":1610932729738,"results":"31","hashOfConfig":"19"},{"size":169,"mtime":1610933214083,"results":"32","hashOfConfig":"19"},{"size":648,"mtime":1611041551103,"results":"33","hashOfConfig":"19"},{"size":245,"mtime":1611041891412,"results":"34","hashOfConfig":"19"},{"size":2271,"mtime":1611043590555,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"ip507x",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/riteshmehrotra/workspace/codemania/src/stories/Leaderboard.stories.js",["79"],"import React from 'react';\n\nimport Leaderboard from '../Leaderboard'\n\nexport default {\n  title: 'CodeMania/Leaderboard',\n  component: Leaderboard\n};\n\nconst Template = (args) => <Leaderboard {...args} />;\n\nexport const DefaultLeaderBoard = Template.bind({});\nDefaultLeaderBoard.args = {\n  name: \"Ritesh\",\n  points: 10,\n  solutions: 1\n}\n\n",["80","81"],"/Users/riteshmehrotra/workspace/codemania/src/Leaderboard.js",[],"/Users/riteshmehrotra/workspace/codemania/src/domain/projects/ProjectCard.stories.js",["82"],"import React from 'react';\n\nimport ProjectCard from './ProjectCard'\n\nexport default {\n  title: 'CodeMania/Project',\n  component: ProjectCard\n};\n\nconst Template = (args) => <ProjectCard {...args} />;\n\nexport const DefaultProjectCard = Template.bind({});\nDefaultProjectCard.args = {\n  author: \"Ritesh\",\n  projectTitle:\"ReactJS\",\n  description:\"New React project\"\n}\n\nexport const ActiveProjectCard = Template.bind({});\nActiveProjectCard.args = {\n  author: \"Ritesh\",\n  projectTitle:\"ReactJS\",\n  description:\"New React project\",\n  isActive:true\n}\n\nexport const InactiveProjectCard = Template.bind({});\nInactiveProjectCard.args = {\n  author: \"Ritesh\",\n  projectTitle:\"ReactJS\",\n  description:\"New React project\",\n  isActive:false\n}","/Users/riteshmehrotra/workspace/codemania/src/domain/projects/ProjectCard.js",["83"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Button, Icon, Modal, Label, Divider, Segment } from 'semantic-ui-react'\n\nconst ProjectCard = (props) => {\n    const [state, dispatch] = React.useReducer(modalViewReducer, { open: false });\n    const { open } = state;\n    let { author, projectTitle, description, isActive } = props;\n    let color = isActive ? \"green\" : \"grey\";\n    return (<><Card color={color} >\n        <Card.Content>\n            <Card.Header>{projectTitle}</Card.Header>\n            <Card.Meta><Label>{author}</Label></Card.Meta>\n            <Card.Description>{description}</Card.Description>\n        </Card.Content>\n        <Card.Content extra><Icon name=\"user times\" ></Icon>4 contributors<Button color=\"linkedin\" floated='right' onClick={() => { dispatch({ type: 'open' }) }}>\n            <Icon name=\"eye\"></Icon>View</Button></Card.Content>\n    </Card>\n        <Modal onClose={() => dispatch({ type: 'close' })} open={open}>\n            <Modal.Header>{projectTitle}</Modal.Header>\n            <Modal.Content>\n                <Modal.Description>\n                    <Segment raised>\n                        <Label as='a' color='red' ribbon>\n                            Java, Springboot, ReactJS, Node\n        </Label>\n                        <div>\n                            {description}</div>\n\n                      \n                        <div>\n                            <Label color=\"green\" as='a'><Icon name='git'></Icon><Label.Detail>View source</Label.Detail></Label>\n                            <Label color=\"blue\" as='a'><Icon name='chat'></Icon><Label.Detail>Ask a question</Label.Detail></Label>\n                        </div>\n                    </Segment>\n                </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='black' onClick={() => { dispatch({ type: 'close' }) }}>\n                    Cancel\n                    </Button>\n                <Button\n                    content=\"Join\"\n                    labelPosition='right'\n                    icon='fork'\n                    onClick={() => dispatch({ type: 'close' })}\n                    positive\n                />\n            </Modal.Actions>\n        </Modal></>)\n}\n\nconst modalViewReducer = (state, action) => {\n    if (action.type === 'close')\n        return { open: false };\n\n    if (action.type === 'open')\n        return { open: true };\n}\n\nProjectCard.propTypes = {\n    author: PropTypes.string.isRequired,\n    projectTitle: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    isActive: PropTypes.bool\n\n};\n\n\nProjectCard.defaultProps = {\n    isActive: true\n};\n\nexport default ProjectCard;","/Users/riteshmehrotra/workspace/codemania/src/domain/projects/ProjectsView.stories.js",["84"],"import React from 'react';\n\nimport ProjectsView from './ProjectsView';\n\nexport default {\n  title: 'CodeMania/ProjectsView',\n  component: ProjectsView\n};\n\nconst Template = (args) => <ProjectsView {...args} />;\n\nexport const DefaultProjectsView = Template.bind({});","/Users/riteshmehrotra/workspace/codemania/src/domain/projects/ProjectsView.js",[],"/Users/riteshmehrotra/workspace/codemania/src/domain/forum/PostCard.stories.js",["85"],"import React from 'react';\n\nimport PostCard from './PostCard';\n\nexport default {\n  title: 'CodeMania/PostCard',\n  component: PostCard\n};\n\nconst Template = (args) => <PostCard {...args} />;\n\nexport const DefaultPostCard = Template.bind({});","/Users/riteshmehrotra/workspace/codemania/src/domain/forum/PostCard.js",["86","87","88","89"],"import React from 'react';\nimport { Comment, Header, Form, Button, Item, Label } from 'semantic-ui-react';\n\nconst PostCard = () => {\n    return (<>\n        <Item>\n\n            <Item.Content>\n                <Item.Header as='a'>E-sign API for PDF documents</Item.Header>\n                <Item.Meta>\n                    <span className='cinema'>Ritesh Mehrotra</span>\n                </Item.Meta>\n                <Item.Description>lorem sdfmsaofas</Item.Description>\n                <Item.Extra>\n                    <Label>Java</Label>\n                    <Label>API</Label>\n                    <Label>Concurrency</Label>\n                </Item.Extra>\n            \n            <Comment.Group threaded>\n            <Header as='h3' dividing>\n                Comments\n    </Header>\n\n            <Comment>\n                <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\n                <Comment.Content>\n                    <Comment.Author as='a'>Matt</Comment.Author>\n                    <Comment.Metadata>\n                        <span>Today at 5:42PM</span>\n                    </Comment.Metadata>\n                    <Comment.Text>How artistic!</Comment.Text>\n                    <Comment.Actions>\n                        <a>Reply</a>\n                    </Comment.Actions>\n                </Comment.Content>\n            </Comment>\n\n            <Comment>\n                <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n                <Comment.Content>\n                    <Comment.Author as='a'>Elliot Fu</Comment.Author>\n                    <Comment.Metadata>\n                        <span>Yesterday at 12:30AM</span>\n                    </Comment.Metadata>\n                    <Comment.Text>\n                        <p>This has been very useful for my research. Thanks as well!</p>\n                    </Comment.Text>\n                    <Comment.Actions>\n                        <a>Reply</a>\n                    </Comment.Actions>\n                </Comment.Content>\n\n                <Comment.Group>\n                    <Comment>\n                        <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\n                        <Comment.Content>\n                            <Comment.Author as='a'>Jenny Hess</Comment.Author>\n                            <Comment.Metadata>\n                                <span>Just now</span>\n                            </Comment.Metadata>\n                            <Comment.Text>Elliot you are always so right :)</Comment.Text>\n                            <Comment.Actions>\n                                <a>Reply</a>\n                            </Comment.Actions>\n                        </Comment.Content>\n                    </Comment>\n                </Comment.Group>\n            </Comment>\n\n            <Comment>\n                <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/joe.jpg' />\n                <Comment.Content>\n                    <Comment.Author as='a'>Joe Henderson</Comment.Author>\n                    <Comment.Metadata>\n                        <span>5 days ago</span>\n                    </Comment.Metadata>\n                    <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n                    <Comment.Actions>\n                        <a>Reply</a>\n                    </Comment.Actions>\n                </Comment.Content>\n            </Comment>\n\n            <Form reply>\n                <Form.TextArea />\n                <Button content='Add Reply' labelPosition='left' icon='edit' primary />\n            </Form>\n        </Comment.Group>\n        </Item.Content>\n        </Item>\n\n        \n\n\n    </>)\n\n\n\n}\n\nexport default PostCard;","/Users/riteshmehrotra/workspace/codemania/src/domain/forum/ForumView.stories.js",["90"],"import React from 'react';\n\nimport ForumView from './ForumView';\n\nexport default {\n  title: 'CodeMania/ForumView',\n  component: ForumView\n};\n\nconst Template = (args) => <ForumView {...args} />;\n\nexport const DefaultForumView = Template.bind({});","/Users/riteshmehrotra/workspace/codemania/src/domain/forum/ForumView.js",[],"/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/Home.stories.js",["91"],"import React from 'react';\n\nimport Home from './Home'\n\nexport default {\n  title: 'CodeMania/Home',\n  component: Home\n};\n\nconst Template = () => <Home />;\n\nexport const DefaultHome = Template.bind({});\n\n\n","/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/home.js",[],"/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/home.stories.js",["92"],"/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/Home.js",[],"/Users/riteshmehrotra/workspace/codemania/src/domain/dashboard/Header.js",[],"/Users/riteshmehrotra/workspace/codemania/src/domain/recordings/TechTalks.stories.js",["93"],"/Users/riteshmehrotra/workspace/codemania/src/domain/recordings/TechTalks.js",[],{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":8,"endColumn":3},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":8,"endColumn":3},{"ruleId":"101","severity":1,"message":"102","line":3,"column":44,"nodeType":"103","messageId":"104","endLine":3,"endColumn":51},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":8,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":8,"endColumn":3},{"ruleId":"105","severity":1,"message":"106","line":34,"column":25,"nodeType":"107","endLine":34,"endColumn":28},{"ruleId":"105","severity":1,"message":"106","line":50,"column":25,"nodeType":"107","endLine":50,"endColumn":28},{"ruleId":"105","severity":1,"message":"106","line":64,"column":33,"nodeType":"107","endLine":64,"endColumn":36},{"ruleId":"105","severity":1,"message":"106","line":80,"column":25,"nodeType":"107","endLine":80,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":8,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":8,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":8,"endColumn":3},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":8,"endColumn":3},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]